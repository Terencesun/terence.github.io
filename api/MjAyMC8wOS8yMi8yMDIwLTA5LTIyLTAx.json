{"title":"【数据库】MySQL 数据库 update A set num=num+ ？ where id=？并发执行情况下存在线程安全问题吗？","date":"2020-09-22T01:21:32.000Z","date_formatted":{"ll":"Sep 22, 2020","L":"09/22/2020","MM-DD":"09-22"},"link":"2020/09/22/2020-09-22-01","comments":true,"tags":["database"],"updated":"2020-09-22T01:47:52.931Z","content":"<h1 id=\"mysql-数据库-update-a-set-num=num+-？-where-id=？并发执行情况下存在线程安全问题吗？\">MySQL 数据库 update A set num=num+ ？ where id=？并发执行情况下存在线程安全问题吗？<a title=\"#mysql-数据库-update-a-set-num=num+-？-where-id=？并发执行情况下存在线程安全问题吗？\" href=\"#mysql-数据库-update-a-set-num=num+-？-where-id=？并发执行情况下存在线程安全问题吗？\"></a></h1>\n<h2 id=\"【本文为转载】原文地址-blog.csdn.net\">【本文为转载】原文地址 <a href=\"https://blog.csdn.net/C_AJing/article/details/106547240\">blog.csdn.net</a><a title=\"#【本文为转载】原文地址-blog.csdn.net\" href=\"#【本文为转载】原文地址-blog.csdn.net\"></a></h2>\n<blockquote>\n<p>这个 SQL 语句执行可以看做是原子操作，<strong>没有线程安全问题</strong></p>\n</blockquote>\n<p>以下为代码</p>\n<ol>\n<li>创建一个 xu_hao 表，为了简单，只有 id 和 num 两个字段</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE &#96;xu_hao&#96;  (</span><br><span class=\"line\">  &#96;id&#96; int(11) NOT NULL,</span><br><span class=\"line\">  &#96;num&#96; int(11) NULL DEFAULT NULL,</span><br><span class=\"line\">  PRIMARY KEY (&#96;id&#96;) USING BTREE</span><br><span class=\"line\">) ENGINE &#x3D; InnoDB CHARACTER SET &#x3D; utf8 COLLATE &#x3D; utf8_general_ci ROW_FORMAT &#x3D; Dynamic;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>插入一条初始化数据</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO &#96;xu_hao&#96;(&#96;id&#96;, &#96;num&#96;) VALUES (1, 0);</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>创建一个 spring boot 工程，项目结构如下</li>\n</ol>\n<p><img src=\"/images/2020-09-22-01/image1.png\" alt=\"\" class=\"φbs\"></p>\n<ol start=\"4\">\n<li>导入 maven 依赖</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.mybatis.spring.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;mybatis-spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.1.2&lt;&#x2F;version&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;druid-spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;1.1.22&lt;&#x2F;version&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;scope&gt;runtime&lt;&#x2F;scope&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;optional&gt;true&lt;&#x2F;optional&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">        &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class=\"line\">        &lt;exclusions&gt;</span><br><span class=\"line\">            &lt;exclusion&gt;</span><br><span class=\"line\">                &lt;groupId&gt;org.junit.vintage&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">                &lt;artifactId&gt;junit-vintage-engine&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;&#x2F;exclusion&gt;</span><br><span class=\"line\">        &lt;&#x2F;exclusions&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>编写 application.yml 配置文件，测试项目，简单配置即可</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring:</span><br><span class=\"line\">  datasource:</span><br><span class=\"line\">    url: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;learn_work?useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8&amp;serverTimezone&#x3D;Asia&#x2F;Shanghai</span><br><span class=\"line\">    username: root</span><br><span class=\"line\">    password: root</span><br><span class=\"line\">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class=\"line\">    type: com.alibaba.druid.pool.DruidDataSource</span><br><span class=\"line\">    </span><br><span class=\"line\">logging:</span><br><span class=\"line\">  level:</span><br><span class=\"line\">      root: warn</span><br><span class=\"line\">      com.learn.spmysqltest.mapper: trace</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>创建一个 XuHaoMapper</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface XuHaoMapper &#123;</span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 自增+1的方式更新num</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param id</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    @Update(&quot;update xu_hao set num &#x3D; num + 1 where id &#x3D; #&#123;id&#125;&quot;)</span><br><span class=\"line\">    int updateXuHaoByIncrease(int id) throws Exception;</span><br><span class=\"line\"></span><br><span class=\"line\">     &#x2F;**</span><br><span class=\"line\">     * 通过id直接更新num</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param num</span><br><span class=\"line\">     * @param id</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @throws Exception</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    @Update(&quot;update xu_hao set num &#x3D; #&#123;num&#125; where id &#x3D; #&#123;id&#125;&quot;)</span><br><span class=\"line\">    int updateXuHao(int num, int id) throws Exception;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 通过id查询num</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param id</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @throws Exception</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    @Select(&quot;select num from xu_hao where id &#x3D; #&#123;id&#125; &quot;)</span><br><span class=\"line\">    int selectXuHao(int id) throws Exception;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>创建 XuHaoService</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface XuHaoService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 自增+1的方式更新num</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param id</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    int updateXuHaoByIncrease(int id) throws Exception;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 直接更新num</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param id</span><br><span class=\"line\">     * @throws Exception</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    int updateXuHao(int id) throws Exception;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 通过id查询num</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param id</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @throws Exception</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    int getXuHao(int id) throws Exception;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>创建 XuHaoServiceImpl</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class XuHaoServiceImpl implements XuHaoService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private XuHaoMapper xuHaoMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    @Transactional</span><br><span class=\"line\">    public int updateXuHaoByIncrease(int id) throws Exception &#123;</span><br><span class=\"line\">        return xuHaoMapper.updateXuHaoByIncrease(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    @Transactional</span><br><span class=\"line\">    public int updateXuHao(int id) throws Exception &#123;</span><br><span class=\"line\">        int dbNum &#x3D; xuHaoMapper.selectXuHao(id);</span><br><span class=\"line\">        dbNum++; &#x2F;&#x2F; num + 1</span><br><span class=\"line\">        return xuHaoMapper.updateXuHao(dbNum, id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    @Transactional(readOnly &#x3D; true)</span><br><span class=\"line\">    public int getXuHao(int id) throws Exception &#123;</span><br><span class=\"line\">        return xuHaoMapper.selectXuHao(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>开启事务支持</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">@EnableTransactionManagement &#x2F;&#x2F; 开启事务</span><br><span class=\"line\">@MapperScan(&quot;com.learn.spmysqltest.mapper&quot;)</span><br><span class=\"line\">public class SpMysqlTestApplication &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        SpringApplication.run(SpMysqlTestApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于单元测试多线程可能会有问题，为了简单，编写一个 XuHaoController 进行测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RestController</span><br><span class=\"line\">@RequestMapping(&quot;&#x2F;xuhao&quot;)</span><br><span class=\"line\">public class XuHaoController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private XuHaoService xuHaoService;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 测试 update xu_hao set num &#x3D; num + 1 where id &#x3D; 1</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    @GetMapping(&quot;&#x2F;updateadd1&quot;)</span><br><span class=\"line\">    public String updateByIncrease() &#123;</span><br><span class=\"line\">        int cupNum &#x3D; Runtime.getRuntime().availableProcessors(); &#x2F;&#x2F; 获取可用的处理器个数</span><br><span class=\"line\">        CountDownLatch latch &#x3D; new CountDownLatch(cupNum);</span><br><span class=\"line\">        for (int i &#x3D; 0; i &lt; cupNum; i++) &#123;</span><br><span class=\"line\">            new Thread(() -&gt; &#123;</span><br><span class=\"line\">                try &#123;</span><br><span class=\"line\">                    latch.await();</span><br><span class=\"line\">                    xuHaoService.updateXuHaoByIncrease(1);</span><br><span class=\"line\">                &#125; catch (Exception e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\">            latch.countDown();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return &quot;cupNum&#x3D;&quot; + cupNum + &quot;,预期num&#x3D;&quot; + cupNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * num &#x3D; num + 1</span><br><span class=\"line\">     * 测试 update xu_hao set num &#x3D; num  where id &#x3D; 1</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    @GetMapping(&quot;&#x2F;update&quot;)</span><br><span class=\"line\">    public String update() &#123;</span><br><span class=\"line\">        int cupNum &#x3D; Runtime.getRuntime().availableProcessors(); &#x2F;&#x2F; 获取可用的处理器个数</span><br><span class=\"line\">        CountDownLatch latch &#x3D; new CountDownLatch(cupNum);</span><br><span class=\"line\">        for (int i &#x3D; 0; i &lt; cupNum; i++) &#123;</span><br><span class=\"line\">            new Thread(() -&gt; &#123;</span><br><span class=\"line\">                try &#123;</span><br><span class=\"line\">                    latch.await();</span><br><span class=\"line\">                    xuHaoService.updateXuHao(1);</span><br><span class=\"line\">                &#125; catch (Exception e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\">            latch.countDown();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return &quot;cupNum&#x3D;&quot; + cupNum + &quot;,预期num&#x3D;&quot; + cupNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>进入正式测试，访问：<a href=\"http://127.0.0.1:8080/xuhao/updateadd1%EF%BC%8C%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C\">http://127.0.0.1:8080/xuhao/updateadd1，运行结果</a></p>\n<p><img src=\"/images/2020-09-22-01/image2.png\" alt=\"\" class=\"φbs\"></p>\n<p>数据库</p>\n<p><img src=\"/images/2020-09-22-01/image3.png\" alt=\"\" class=\"φbs\"></p>\n<p>可以看到，我电脑处理器个数是 6 个，我用 CountDownLatch 模拟 6 个线程同时执行数据库更新操作，预期值和处理器个数一致，并没有出现线程安全问题。</p>\n<p>简单解释一下：每次执行 update 的时候，会持有 id=1 这行记录的排它锁，后面的 update 需要持有这个记录的排它锁释放之后，才能对他进行修改，也就是说，后面的 update 操作会阻塞，直到前一个 update 提交成功或者发生异常回滚事务了，他才会获得这个锁，从而对数据进行修改。（可以网上查询更加详细的解答）</p>\n<p>如果我们是查询 num 后，在代码里面进行加 1 操作，再更新回数据库呢？把数据库中的 num 重新置为 0，访问：<a href=\"http://127.0.0.1:8080/xuhao/update%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%9C\">http://127.0.0.1:8080/xuhao/update，数据库结果</a></p>\n<p><img src=\"/images/2020-09-22-01/image4.png\" alt=\"\" class=\"φbs\"></p>\n<p>预期是 6，现在却是 1，很明显有线程安全问题，有其他的解决方法吗？</p>\n<p>其实有了上面的启示，我们很容易想到，使用 MySQL 数据库的排它锁来解决（select … for update），在 XuHaoMapper 中增加一个函数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * 通过id查询num</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param id</span><br><span class=\"line\"> * @return</span><br><span class=\"line\"> * @throws Exception</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">@Select(&quot;select num from xu_hao where id &#x3D; #&#123;id&#125; for update &quot;)</span><br><span class=\"line\">int selectXuHao2(int id) throws Exception;</span><br></pre></td></tr></table></figure>\n<p>修改 XuHaoServiceImpl 中的 updateXuHao 方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Override</span><br><span class=\"line\">@Transactional</span><br><span class=\"line\">public int updateXuHao(int id) throws Exception &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; int dbNum &#x3D; xuHaoMapper.selectXuHao(id);</span><br><span class=\"line\">    int dbNum &#x3D; xuHaoMapper.selectXuHao2(id);</span><br><span class=\"line\">    dbNum++; &#x2F;&#x2F; num + 1</span><br><span class=\"line\">    return xuHaoMapper.updateXuHao(dbNum, id);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>重新将数据库中 num 置为 0，并访问 <a href=\"http://127.0.0.1:8080/xuhao/update%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%9C\">http://127.0.0.1:8080/xuhao/update，数据库结果</a></p>\n<p><img src=\"/images/2020-09-22-01/image5.png\" alt=\"\" class=\"φbs\"></p>\n<p>可以看到，数据库结果与预期结果一致，此时也没有并发访问问题，原因与上面相似，for update 是一种行级锁，又叫排它锁，一旦用户对某个行施加了行级加锁，则该用户可以查询也可以更新被加锁的数据行，其它用户只能查询但不能更新被加锁的数据行．如果其它用户想更新该表中的数据行，则必须获取该行级锁．行锁永远是独占方式锁。for update 需要事务提交或回滚了才会释放锁，所以在 spring 管理的事务方法中，使用这种方式，也不会出现并发访问问题。</p>\n<p>注意：select … for update , 如果查询条件带有主键，会锁行数据，如果没有，会锁表，另外并发访问下可能会造成死锁！</p>\n","prev":{"title":"【go】反射","link":"2020/09/28/2020-09-29-01"},"next":{"title":"【算法】排序算法-插入排序","link":"2020/09/21/2020-09-21-02"},"plink":"https://terence.segofun.com/2020/09/22/2020-09-22-01/","toc":[{"id":"mysql-数据库-update-a-set-num=num+-？-where-id=？并发执行情况下存在线程安全问题吗？","title":"MySQL 数据库 update A set num&#x3D;num+ ？ where id&#x3D;？并发执行情况下存在线程安全问题吗？","index":"1","children":[{"id":"【本文为转载】原文地址-blog.csdn.net","title":"【本文为转载】原文地址 blog.csdn.net","index":"1.1"}]}]}