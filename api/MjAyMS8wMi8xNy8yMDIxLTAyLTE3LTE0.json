{"title":"【Go语言核心36讲】15. 关于指针的有限操作","date":"2021-02-17T15:28:32.000Z","date_formatted":{"ll":"Feb 17, 2021","L":"02/17/2021","MM-DD":"02-17"},"link":"2021/02/17/2021-02-17-14","comments":true,"tags":["Go语言核心36讲","极客时间"],"updated":"2021-02-17T15:39:36.862Z","content":"<blockquote>\n<p>Hi, 如果你看到这篇文章，那么我是根据极客时间的郝林老师的Go语言核心36讲记录的笔记<br>\n如果对Go语言核心36讲感兴趣的，请支持原作者<br>\n地址：<a href=\"https://time.geekbang.org/column/intro/112\">https://time.geekbang.org/column/intro/112</a></p>\n</blockquote>\n<ol>\n<li>指针概念</li>\n</ol>\n<ul>\n<li>指针是一个指向某个确切的内存地址的值。这个内存地址可以是任何数据或代码的起始地址，比如，某个变量、某个字段或某个函数</li>\n<li>根据当前计算机的计算架构的不同，它可以存储 32 位或 64 位的无符号整数，可以代表任何指针的位（bit）模式，也就是原始的内存地址</li>\n</ul>\n<ol start=\"2\">\n<li>可寻址的条件</li>\n</ol>\n<ul>\n<li>不可变的、临时结果和不安全的</li>\n<li>常量的值</li>\n<li>基本类型值的字面量</li>\n<li>算术操作的结果值</li>\n<li>对各种字面量的索引表达式和切片表达式的结果值</li>\n<li>不过有一个例外，对切片字面量的索引结果值却是可寻址的</li>\n<li>对字符串变量的索引表达式和切片表达式的结果值</li>\n<li>对字典变量的索引表达式的结果值</li>\n<li>函数字面量和方法字面量，以及对它们的调用表达式的结果值</li>\n<li>结构体字面量的字段值，也就是对结构体字面量的选择表达式的结果值</li>\n<li>类型转换表达式的结果值</li>\n<li>类型断言表达式的结果值</li>\n<li>接收表达式的结果值</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p>对切片字面量的索引结果值是可寻址的</p>\n</li>\n<li>\n<p>无法调用一个不可寻址值的指针方法</p>\n</li>\n<li>\n<p>字面量</p>\n</li>\n</ol>\n<ul>\n<li>用于表示值或者类型的代码段。比如：1234就是代表整数值的字面量，int64就是代表类型的字面量</li>\n</ul>\n<ol start=\"6\">\n<li>unsafe.Pointer操纵可寻址的值，可以绕过 Go 语言的编译器和其他工具的重重检查，并达到潜入内存修改数据的目的</li>\n</ol>\n","prev":{"title":"【Go语言核心36讲】16/17. go语句及其执行规则","link":"2021/02/18/2021-02-18-01"},"next":{"title":"【Go语言核心36讲】14. 接口类型的合理运用","link":"2021/02/17/2021-02-17-13"},"plink":"https://terence.segofun.com/2021/02/17/2021-02-17-14/"}