{"title":"google身份验证器的一个demo流程","date":"2023-04-10T12:33:46.000Z","date_formatted":{"ll":"Apr 10, 2023","L":"04/10/2023","MM-DD":"04-10"},"link":"2023/04/10/2023-04-25","comments":true,"tags":["备忘"],"updated":"2023-04-25T07:04:24.512Z","content":"<h2 id=\"概念\">概念<a title=\"#概念\" href=\"#概念\"></a></h2>\n<ul>\n<li>一次性密码</li>\n<li>google身份验证器</li>\n</ul>\n<h3 id=\"一次性密码\">一次性密码<a title=\"#一次性密码\" href=\"#一次性密码\"></a></h3>\n<ul>\n<li>一次性密码（One-Time Password，OTP），又叫做动态口令、动态验证码</li>\n<li>客户端和服务端通过分享种子密钥进行认证的无需联网的技术</li>\n<li>常见的实现：</li>\n<li>HOTP（HMAC-Based One-Time Password Algorithm）</li>\n<li>TOTP（Time-Based One-Time Password Algorithm）</li>\n</ul>\n<h4 id=\"hotp\">HOTP<a title=\"#hotp\" href=\"#hotp\"></a></h4>\n<ul>\n<li>基于HMAC算法，双方先分享一个相同的密钥，然后设置一个同步的计数器</li>\n<li>由于二者计数器是同步的，每次生产的一次性令牌也是相同的</li>\n<li>实现规范<a href=\"https://www.rfc-editor.org/rfc/rfc4226\" target=\"_blank\">RFC-4226</a></li>\n</ul>\n<h4 id=\"totp\">TOTP<a title=\"#totp\" href=\"#totp\"></a></h4>\n<ul>\n<li>基于时间的，所以就不再需要同步计数器，只需要双方的当前时间相同即可</li>\n<li>实现规范<a href=\"https://www.rfc-editor.org/rfc/rfc6238\" target=\"_blank\">RFC-6238</a></li>\n</ul>\n<h3 id=\"接入流程\">接入流程<a title=\"#接入流程\" href=\"#接入流程\"></a></h3>\n<p><img src=\"./../images/store/49b8e7ff8ad3456ea4ea65457cba111d.png\" alt=\"接入流程\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"demo代码\">demo代码<a title=\"#demo代码\" href=\"#demo代码\"></a></h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; authenticator &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;otplib&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> qr = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;qrcode&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> createSeedSecret = <span class=\"keyword\">async</span> (userName, appName) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> secret = authenticator.generateSecret();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> googleKeyuri = authenticator.keyuri(userName, appName, secret);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> qrcodeUrl = <span class=\"keyword\">await</span> qr.toDataURL(googleKeyuri);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; secret, qrcodeUrl, googleKeyuri &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> isCodeCorrect = <span class=\"function\">(<span class=\"params\">code, secret</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> authenticator.check(code, secret);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">main</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取二维码</span></span><br><span class=\"line\">    <span class=\"comment\">// const ret = await createSeedSecret(&quot;terence&quot;, &quot;app&quot;);</span></span><br><span class=\"line\">    <span class=\"comment\">// qr.toString(ret.googleKeyuri, &#123; type: &quot;terminal&quot; &#125;, (err, url) =&gt; &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     console.log(url);</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;);</span></span><br><span class=\"line\">    <span class=\"comment\">// 认证</span></span><br><span class=\"line\">    <span class=\"comment\">// const secret = &quot;PY2R4KZAFM5RO4CT&quot;;</span></span><br><span class=\"line\">    <span class=\"comment\">// const checkRet = isCodeCorrect(&quot;1043471&quot;, secret);</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(checkRet);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main();</span><br></pre></td></tr></table></figure>\n","next":{"title":"【Go语言项目开发】08/09 研发流程设计","link":"2021/07/28/2021-07-28"},"plink":"https://terence.segofun.com/2023/04/10/2023-04-25/","toc":[{"id":"概念","title":"概念","index":"1","children":[{"id":"一次性密码","title":"一次性密码","index":"1.1"},{"id":"接入流程","title":"接入流程","index":"1.2"},{"id":"demo代码","title":"demo代码","index":"1.3"}]}],"reading_time":"310 words in 2 min"}